
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$cyan-palette,
      accent: mat.$orange-palette,
      warn: mat.$red-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.hint-dialog-floating {
  box-shadow: 0 8px 24px rgba(0, 0, 0, .25);
  border-radius: 8px;
  pointer-events: auto;
  /* allow interaction */
}

/* Make hint overlays more apparent */
.app-hint-amber {
  background: rgba(255, 193, 7, .12) !important;
}

.app-hint-target {
  box-shadow: inset 0 0 0 3px rgba(255, 193, 7, .95) !important;
}

/* Optional: slightly increase general highlight contrast */
.app-hl-blue {
  background: rgba(25, 118, 210, .10) !important;
}

.app-hl-blue-strong {
  background: rgba(25, 118, 210, .16) !important;
}
